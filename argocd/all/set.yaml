apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name     : dev-01-all-set
  namespace: argo-cd

spec:
  goTemplate: true
  goTemplateOptions: [ missingkey=error ]
  syncPolicy:
    applicationsSync: create-update
  generators:
    - git:
        repoURL : &repo https://gitlab.com/argocd9135324/dev-01.git
        revision: HEAD
        requeueAfterSeconds: 30
        files:
        - path: values/@envs/*.yaml
  template:
    metadata:
      ##          'dev-01-prod' - can be used as app namespace in the cluster
      name       : &name dev-01-all-app-{{ .path.filenameNormalized | replace ".yaml" "" }}
      finalizers : [ resources-finalizer.argocd.argoproj.io ]
      annotations:
        ###################################
        ### argo image updater settings ###
        ###################################
        # * where to get the image and how filter image version (create alias for other annotation 'app-01')
        argocd-image-updater.argoproj.io/image-list: app-01=registry.gitlab.com/argocd9135324/app-01:~0.0.1
        
        # ? secret data for the git repo (access to replace image version)
        argocd-image-updater.argoproj.io/write-back-method: git:secret:argo-cd/repo-3701229305
        
        # * write back settings (where the replace a file)
        argocd-image-updater.argoproj.io/write-back-target: helmvalues:/values/image/{{- .Config.extend.image -}}.yaml
        
        # * if empty '' then autoupdate enabled if '*' then autoupdate disabled for all
        argocd-image-updater.argoproj.io/app-01.ignore-tags: '{{- .Config.autoupdate.enabled | ternary "" "*" -}}'
        
        # ? see https://argocd-image-updater.readthedocs.io/en/latest/basics/update-strategies
        argocd-image-updater.argoproj.io/app-01.update-strategy: semver
        
        # * map yaml fields to the image updater replace fields
        argocd-image-updater.argoproj.io/app-01.helm.image-name: Deployment.Image.repository
        argocd-image-updater.argoproj.io/app-01.helm.image-tag : Deployment.Image.tag

  
    spec:
      project: default        # ? maybe change from config
      sources:
      - repoURL       : *repo # repo URL for chart
        path          : chart # path to the chart folder
        targetRevision: HEAD  # can be branch, tag or commit (of chart version)
        helm:
          valueFiles  :       # list of value files to use
            - $v/values/default/{{- .Config.extend.default -}}.yaml
            - $v/values/image/  {{- .Config.extend.image   -}}.yaml
            - $v/values/power/  {{- .Config.extend.power   -}}.yaml
            - $v/values/region/ {{- .Config.extend.region  -}}.yaml
            - $v/values/@envs/  {{- .path.filename         -}}
      
      - repoURL       : *repo  # repo URL for values (can be splited from chart)
        ref           : v      # alias to this repo
        targetRevision: HEAD   # revision for values (so wee can use any repo and revision for values)
    
      destination:
        server   : https://kubernetes.default.svc
        namespace: *name # namespace == app name

      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          prune   : true
          selfHeal: true
